{"ast":null,"code":"import AMapLoader from '@amap/amap-jsapi-loader';\nexport default {\n  data() {\n    return {\n      form: {\n        origin: '',\n        destination: ''\n      },\n      map: null,\n      driving: null,\n      polyline: null\n    };\n  },\n  mounted() {\n    this.initMap();\n    this.$message({\n      message: 'hu',\n      type: 'success'\n    });\n  },\n  methods: {\n    initMap() {\n      AMapLoader.load({\n        key: \"7e7c1d5b0e5e55e2689d0bdc9d5af47c\",\n        // 申请好的Web端开发者Key，首次调用 load 时必填\n        version: \"2.0\",\n        // 指定要加载的 JSAPI 的版本，缺省时默认为 1.4.15\n        plugins: ['AMap.Driving'] // 需要使用的的插件列表，如比例尺'AMap.Scale'等\n      }).then(AMap => {\n        this.map = new AMap.Map(\"mapContainer\", {\n          //设置地图容器id\n          viewMode: \"3D\",\n          //是否为3D地图模式\n          zoom: 5,\n          //初始化地图级别\n          center: [105.602725, 37.076636] //初始化地图中心点位置\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    },\n    planRoute() {\n      /* console.log(\"start\");\r\n      // 构造路线导航类\r\n      this.driving = new AMap.Driving({\r\n        map: this.map,\r\n        panel: \"panel\"\r\n      });\r\n      console.log(this.driving);\r\n      this.driving.search([\r\n        { keyword: '北京市地震局(公交站)', city: '北京' },\r\n        { keyword: '亦庄文化园(地铁站)', city: '北京' }\r\n      ], function (status, result) {\r\n        // result 即是对应的驾车导航信息，相关数据结构文档请参考  https://lbs.amap.com/api/javascript-api/reference/route-search#m_DrivingResult\r\n        if (status === 'complete') {\r\n          console.success('绘制驾车路线完成')\r\n        } else {\r\n          console.error('获取驾车数据失败：' + result)\r\n        }\r\n      });\r\n      console.log(\"end\"); */\n      const {\n        origin,\n        destination\n      } = this.form;\n      if (!origin || !destination) {\n        return;\n      }\n      if (this.polyline) {\n        this.map.remove(this.polyline);\n      }\n      AMap.plugin('AMap.Driving', () => {\n        this.driving = new AMap.Driving({\n          map: this.map\n        });\n        this.driving.search([{\n          keyword: origin,\n          city: '全国'\n        }, {\n          keyword: destination,\n          city: '全国'\n        }], (status, result) => {\n          if (status === 'complete' && result.routes && result.routes.length) {\n            const path = result.routes[0].path;\n            this.polyline = new AMap.Polyline({\n              path: path,\n              strokeColor: '#3366FF',\n              strokeWeight: 5,\n              map: this.map\n            });\n            this.map.setFitView();\n          }\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["AMapLoader","data","form","origin","destination","map","driving","polyline","mounted","initMap","$message","message","type","methods","load","key","version","plugins","then","AMap","Map","viewMode","zoom","center","catch","e","console","log","planRoute","remove","plugin","Driving","search","keyword","city","status","result","routes","length","path","Polyline","strokeColor","strokeWeight","setFitView"],"sources":["src/components/Order.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>路线规划</h1>\r\n    <div id=\"mapContainer\" style=\"height: 500px\"></div>\r\n    <div>\r\n      <el-form :model=\"form\" label-width=\"80px\" style=\"margin-top: 20px;\">\r\n        <el-form-item label=\"起始地点\">\r\n          <el-input v-model=\"form.origin\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"目的地点\">\r\n          <el-input v-model=\"form.destination\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"planRoute\">规划路线</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport AMapLoader from '@amap/amap-jsapi-loader';\r\nexport default {\r\n  data() {\r\n    return {\r\n      form: {\r\n        origin: '',\r\n        destination: ''\r\n      },\r\n      map: null,\r\n      driving: null,\r\n      polyline: null\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initMap();\r\n    this.$message({\r\n      message: 'hu',\r\n      type: 'success'\r\n    });\r\n  },\r\n  methods: {\r\n    initMap() {\r\n      AMapLoader.load({\r\n        key: \"7e7c1d5b0e5e55e2689d0bdc9d5af47c\",             // 申请好的Web端开发者Key，首次调用 load 时必填\r\n        version: \"2.0\",      // 指定要加载的 JSAPI 的版本，缺省时默认为 1.4.15\r\n        plugins: ['AMap.Driving'],       // 需要使用的的插件列表，如比例尺'AMap.Scale'等\r\n      }).then((AMap) => {\r\n        this.map = new AMap.Map(\"mapContainer\", {  //设置地图容器id\r\n          viewMode: \"3D\",    //是否为3D地图模式\r\n          zoom: 5,           //初始化地图级别\r\n          center: [105.602725, 37.076636], //初始化地图中心点位置\r\n        });\r\n      }).catch(e => {\r\n        console.log(e);\r\n      })\r\n    },\r\n    planRoute() {\r\n      /* console.log(\"start\");\r\n      // 构造路线导航类\r\n      this.driving = new AMap.Driving({\r\n        map: this.map,\r\n        panel: \"panel\"\r\n      });\r\n      console.log(this.driving);\r\n      this.driving.search([\r\n        { keyword: '北京市地震局(公交站)', city: '北京' },\r\n        { keyword: '亦庄文化园(地铁站)', city: '北京' }\r\n      ], function (status, result) {\r\n        // result 即是对应的驾车导航信息，相关数据结构文档请参考  https://lbs.amap.com/api/javascript-api/reference/route-search#m_DrivingResult\r\n        if (status === 'complete') {\r\n          console.success('绘制驾车路线完成')\r\n        } else {\r\n          console.error('获取驾车数据失败：' + result)\r\n        }\r\n      });\r\n      console.log(\"end\"); */\r\n      const { origin, destination } = this.form;\r\n\r\n      if (!origin || !destination) {\r\n        return;\r\n      }\r\n\r\n      if (this.polyline) {\r\n        this.map.remove(this.polyline);\r\n      }\r\n\r\n      AMap.plugin('AMap.Driving', () => {\r\n        this.driving = new AMap.Driving({\r\n          map: this.map\r\n        });\r\n\r\n        this.driving.search([\r\n          { keyword: origin, city: '全国' },\r\n          { keyword: destination, city: '全国' }\r\n        ], (status, result) => {\r\n          if (status === 'complete' && result.routes && result.routes.length) {\r\n            const path = result.routes[0].path;\r\n            this.polyline = new AMap.Polyline({\r\n              path: path,\r\n              strokeColor: '#3366FF',\r\n              strokeWeight: 5,\r\n              map: this.map\r\n            });\r\n            this.map.setFitView();\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"AAoBA,OAAAA,UAAA;AACA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,MAAA;QACAC,WAAA;MACA;MACAC,GAAA;MACAC,OAAA;MACAC,QAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,OAAA;IACA,KAAAC,QAAA;MACAC,OAAA;MACAC,IAAA;IACA;EACA;EACAC,OAAA;IACAJ,QAAA;MACAT,UAAA,CAAAc,IAAA;QACAC,GAAA;QAAA;QACAC,OAAA;QAAA;QACAC,OAAA;MACA,GAAAC,IAAA,CAAAC,IAAA;QACA,KAAAd,GAAA,OAAAc,IAAA,CAAAC,GAAA;UAAA;UACAC,QAAA;UAAA;UACAC,IAAA;UAAA;UACAC,MAAA;QACA;MACA,GAAAC,KAAA,CAAAC,CAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,CAAA;MACA;IACA;IACAG,UAAA;MACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACA;QAAAzB,MAAA;QAAAC;MAAA,SAAAF,IAAA;MAEA,KAAAC,MAAA,KAAAC,WAAA;QACA;MACA;MAEA,SAAAG,QAAA;QACA,KAAAF,GAAA,CAAAwB,MAAA,MAAAtB,QAAA;MACA;MAEAY,IAAA,CAAAW,MAAA;QACA,KAAAxB,OAAA,OAAAa,IAAA,CAAAY,OAAA;UACA1B,GAAA,OAAAA;QACA;QAEA,KAAAC,OAAA,CAAA0B,MAAA,EACA;UAAAC,OAAA,EAAA9B,MAAA;UAAA+B,IAAA;QAAA,GACA;UAAAD,OAAA,EAAA7B,WAAA;UAAA8B,IAAA;QAAA,EACA,GAAAC,MAAA,EAAAC,MAAA;UACA,IAAAD,MAAA,mBAAAC,MAAA,CAAAC,MAAA,IAAAD,MAAA,CAAAC,MAAA,CAAAC,MAAA;YACA,MAAAC,IAAA,GAAAH,MAAA,CAAAC,MAAA,IAAAE,IAAA;YACA,KAAAhC,QAAA,OAAAY,IAAA,CAAAqB,QAAA;cACAD,IAAA,EAAAA,IAAA;cACAE,WAAA;cACAC,YAAA;cACArC,GAAA,OAAAA;YACA;YACA,KAAAA,GAAA,CAAAsC,UAAA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}